{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { TinyColor } from '@ctrl/tinycolor';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n// ============================== Styles ==============================\nconst genBaseStyle = token => {\n  const {\n    paddingXXS,\n    lineWidth,\n    tagPaddingHorizontal,\n    componentCls,\n    calc\n  } = token;\n  const paddingInline = calc(tagPaddingHorizontal).sub(lineWidth).equal();\n  const iconMarginInline = calc(paddingXXS).sub(lineWidth).equal();\n  return {\n    // Result\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      height: 'auto',\n      paddingInline,\n      fontSize: token.tagFontSize,\n      lineHeight: token.tagLineHeight,\n      whiteSpace: 'nowrap',\n      background: token.defaultBg,\n      border: \"\".concat(unit(token.lineWidth), \" \").concat(token.lineType, \" \").concat(token.colorBorder),\n      borderRadius: token.borderRadiusSM,\n      opacity: 1,\n      transition: \"all \".concat(token.motionDurationMid),\n      textAlign: 'start',\n      position: 'relative',\n      // RTL\n      [\"&\".concat(componentCls, \"-rtl\")]: {\n        direction: 'rtl'\n      },\n      '&, a, a:hover': {\n        color: token.defaultColor\n      },\n      [\"\".concat(componentCls, \"-close-icon\")]: {\n        marginInlineStart: iconMarginInline,\n        fontSize: token.tagIconSize,\n        color: token.colorTextDescription,\n        cursor: 'pointer',\n        transition: \"all \".concat(token.motionDurationMid),\n        '&:hover': {\n          color: token.colorTextHeading\n        }\n      },\n      [\"&\".concat(componentCls, \"-has-color\")]: {\n        borderColor: 'transparent',\n        [\"&, a, a:hover, \".concat(token.iconCls, \"-close, \").concat(token.iconCls, \"-close:hover\")]: {\n          color: token.colorTextLightSolid\n        }\n      },\n      [\"&-checkable\"]: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n        [\"&:not(\".concat(componentCls, \"-checkable-checked):hover\")]: {\n          color: token.colorPrimary,\n          backgroundColor: token.colorFillSecondary\n        },\n        '&:active, &-checked': {\n          color: token.colorTextLightSolid\n        },\n        '&-checked': {\n          backgroundColor: token.colorPrimary,\n          '&:hover': {\n            backgroundColor: token.colorPrimaryHover\n          }\n        },\n        '&:active': {\n          backgroundColor: token.colorPrimaryActive\n        }\n      },\n      [\"&-hidden\"]: {\n        display: 'none'\n      },\n      // To ensure that a space will be placed between character and `Icon`.\n      [\"> \".concat(token.iconCls, \" + span, > span + \").concat(token.iconCls)]: {\n        marginInlineStart: paddingInline\n      }\n    }),\n    [\"\".concat(componentCls, \"-borderless\")]: {\n      borderColor: 'transparent',\n      background: token.tagBorderlessBg\n    }\n  };\n};\n// ============================== Export ==============================\nexport const prepareToken = token => {\n  const {\n    lineWidth,\n    fontSizeIcon,\n    calc\n  } = token;\n  const tagFontSize = token.fontSizeSM;\n  const tagToken = mergeToken(token, {\n    tagFontSize,\n    tagLineHeight: unit(calc(token.lineHeightSM).mul(tagFontSize).equal()),\n    tagIconSize: calc(fontSizeIcon).sub(calc(lineWidth).mul(2)).equal(),\n    // Tag icon is much smaller\n    tagPaddingHorizontal: 8,\n    // Fixed padding.\n    tagBorderlessBg: token.defaultBg\n  });\n  return tagToken;\n};\nexport const prepareComponentToken = token => ({\n  defaultBg: new TinyColor(token.colorFillQuaternary).onBackground(token.colorBgContainer).toHexString(),\n  defaultColor: token.colorText\n});\nexport default genStyleHooks('Tag', token => {\n  const tagToken = prepareToken(token);\n  return genBaseStyle(tagToken);\n}, prepareComponentToken);","map":{"version":3,"names":["unit","TinyColor","resetComponent","genStyleHooks","mergeToken","genBaseStyle","token","paddingXXS","lineWidth","tagPaddingHorizontal","componentCls","calc","paddingInline","sub","equal","iconMarginInline","Object","assign","display","height","fontSize","tagFontSize","lineHeight","tagLineHeight","whiteSpace","background","defaultBg","border","concat","lineType","colorBorder","borderRadius","borderRadiusSM","opacity","transition","motionDurationMid","textAlign","position","direction","color","defaultColor","marginInlineStart","tagIconSize","colorTextDescription","cursor","colorTextHeading","borderColor","iconCls","colorTextLightSolid","backgroundColor","colorPrimary","colorFillSecondary","colorPrimaryHover","colorPrimaryActive","tagBorderlessBg","prepareToken","fontSizeIcon","fontSizeSM","tagToken","lineHeightSM","mul","prepareComponentToken","colorFillQuaternary","onBackground","colorBgContainer","toHexString","colorText"],"sources":["/Users/betulsofuoglu/Desktop/React/pos-application/client/node_modules/antd/es/tag/style/index.js"],"sourcesContent":["import { unit } from '@ant-design/cssinjs';\nimport { TinyColor } from '@ctrl/tinycolor';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n// ============================== Styles ==============================\nconst genBaseStyle = token => {\n  const {\n    paddingXXS,\n    lineWidth,\n    tagPaddingHorizontal,\n    componentCls,\n    calc\n  } = token;\n  const paddingInline = calc(tagPaddingHorizontal).sub(lineWidth).equal();\n  const iconMarginInline = calc(paddingXXS).sub(lineWidth).equal();\n  return {\n    // Result\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      height: 'auto',\n      paddingInline,\n      fontSize: token.tagFontSize,\n      lineHeight: token.tagLineHeight,\n      whiteSpace: 'nowrap',\n      background: token.defaultBg,\n      border: `${unit(token.lineWidth)} ${token.lineType} ${token.colorBorder}`,\n      borderRadius: token.borderRadiusSM,\n      opacity: 1,\n      transition: `all ${token.motionDurationMid}`,\n      textAlign: 'start',\n      position: 'relative',\n      // RTL\n      [`&${componentCls}-rtl`]: {\n        direction: 'rtl'\n      },\n      '&, a, a:hover': {\n        color: token.defaultColor\n      },\n      [`${componentCls}-close-icon`]: {\n        marginInlineStart: iconMarginInline,\n        fontSize: token.tagIconSize,\n        color: token.colorTextDescription,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}`,\n        '&:hover': {\n          color: token.colorTextHeading\n        }\n      },\n      [`&${componentCls}-has-color`]: {\n        borderColor: 'transparent',\n        [`&, a, a:hover, ${token.iconCls}-close, ${token.iconCls}-close:hover`]: {\n          color: token.colorTextLightSolid\n        }\n      },\n      [`&-checkable`]: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n        [`&:not(${componentCls}-checkable-checked):hover`]: {\n          color: token.colorPrimary,\n          backgroundColor: token.colorFillSecondary\n        },\n        '&:active, &-checked': {\n          color: token.colorTextLightSolid\n        },\n        '&-checked': {\n          backgroundColor: token.colorPrimary,\n          '&:hover': {\n            backgroundColor: token.colorPrimaryHover\n          }\n        },\n        '&:active': {\n          backgroundColor: token.colorPrimaryActive\n        }\n      },\n      [`&-hidden`]: {\n        display: 'none'\n      },\n      // To ensure that a space will be placed between character and `Icon`.\n      [`> ${token.iconCls} + span, > span + ${token.iconCls}`]: {\n        marginInlineStart: paddingInline\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent',\n      background: token.tagBorderlessBg\n    }\n  };\n};\n// ============================== Export ==============================\nexport const prepareToken = token => {\n  const {\n    lineWidth,\n    fontSizeIcon,\n    calc\n  } = token;\n  const tagFontSize = token.fontSizeSM;\n  const tagToken = mergeToken(token, {\n    tagFontSize,\n    tagLineHeight: unit(calc(token.lineHeightSM).mul(tagFontSize).equal()),\n    tagIconSize: calc(fontSizeIcon).sub(calc(lineWidth).mul(2)).equal(),\n    // Tag icon is much smaller\n    tagPaddingHorizontal: 8,\n    // Fixed padding.\n    tagBorderlessBg: token.defaultBg\n  });\n  return tagToken;\n};\nexport const prepareComponentToken = token => ({\n  defaultBg: new TinyColor(token.colorFillQuaternary).onBackground(token.colorBgContainer).toHexString(),\n  defaultColor: token.colorText\n});\nexport default genStyleHooks('Tag', token => {\n  const tagToken = prepareToken(token);\n  return genBaseStyle(tagToken);\n}, prepareComponentToken);"],"mappings":"AAAA,SAASA,IAAI,QAAQ,qBAAqB;AAC1C,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,cAAc,QAAQ,aAAa;AAC5C,SAASC,aAAa,EAAEC,UAAU,QAAQ,sBAAsB;AAChE;AACA,MAAMC,YAAY,GAAGC,KAAK,IAAI;EAC5B,MAAM;IACJC,UAAU;IACVC,SAAS;IACTC,oBAAoB;IACpBC,YAAY;IACZC;EACF,CAAC,GAAGL,KAAK;EACT,MAAMM,aAAa,GAAGD,IAAI,CAACF,oBAAoB,CAAC,CAACI,GAAG,CAACL,SAAS,CAAC,CAACM,KAAK,CAAC,CAAC;EACvE,MAAMC,gBAAgB,GAAGJ,IAAI,CAACJ,UAAU,CAAC,CAACM,GAAG,CAACL,SAAS,CAAC,CAACM,KAAK,CAAC,CAAC;EAChE,OAAO;IACL;IACA,CAACJ,YAAY,GAAGM,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEf,cAAc,CAACI,KAAK,CAAC,CAAC,EAAE;MACtEY,OAAO,EAAE,cAAc;MACvBC,MAAM,EAAE,MAAM;MACdP,aAAa;MACbQ,QAAQ,EAAEd,KAAK,CAACe,WAAW;MAC3BC,UAAU,EAAEhB,KAAK,CAACiB,aAAa;MAC/BC,UAAU,EAAE,QAAQ;MACpBC,UAAU,EAAEnB,KAAK,CAACoB,SAAS;MAC3BC,MAAM,KAAAC,MAAA,CAAK5B,IAAI,CAACM,KAAK,CAACE,SAAS,CAAC,OAAAoB,MAAA,CAAItB,KAAK,CAACuB,QAAQ,OAAAD,MAAA,CAAItB,KAAK,CAACwB,WAAW,CAAE;MACzEC,YAAY,EAAEzB,KAAK,CAAC0B,cAAc;MAClCC,OAAO,EAAE,CAAC;MACVC,UAAU,SAAAN,MAAA,CAAStB,KAAK,CAAC6B,iBAAiB,CAAE;MAC5CC,SAAS,EAAE,OAAO;MAClBC,QAAQ,EAAE,UAAU;MACpB;MACA,KAAAT,MAAA,CAAKlB,YAAY,YAAS;QACxB4B,SAAS,EAAE;MACb,CAAC;MACD,eAAe,EAAE;QACfC,KAAK,EAAEjC,KAAK,CAACkC;MACf,CAAC;MACD,IAAAZ,MAAA,CAAIlB,YAAY,mBAAgB;QAC9B+B,iBAAiB,EAAE1B,gBAAgB;QACnCK,QAAQ,EAAEd,KAAK,CAACoC,WAAW;QAC3BH,KAAK,EAAEjC,KAAK,CAACqC,oBAAoB;QACjCC,MAAM,EAAE,SAAS;QACjBV,UAAU,SAAAN,MAAA,CAAStB,KAAK,CAAC6B,iBAAiB,CAAE;QAC5C,SAAS,EAAE;UACTI,KAAK,EAAEjC,KAAK,CAACuC;QACf;MACF,CAAC;MACD,KAAAjB,MAAA,CAAKlB,YAAY,kBAAe;QAC9BoC,WAAW,EAAE,aAAa;QAC1B,mBAAAlB,MAAA,CAAmBtB,KAAK,CAACyC,OAAO,cAAAnB,MAAA,CAAWtB,KAAK,CAACyC,OAAO,oBAAiB;UACvER,KAAK,EAAEjC,KAAK,CAAC0C;QACf;MACF,CAAC;MACD,iBAAiB;QACfC,eAAe,EAAE,aAAa;QAC9BH,WAAW,EAAE,aAAa;QAC1BF,MAAM,EAAE,SAAS;QACjB,UAAAhB,MAAA,CAAUlB,YAAY,iCAA8B;UAClD6B,KAAK,EAAEjC,KAAK,CAAC4C,YAAY;UACzBD,eAAe,EAAE3C,KAAK,CAAC6C;QACzB,CAAC;QACD,qBAAqB,EAAE;UACrBZ,KAAK,EAAEjC,KAAK,CAAC0C;QACf,CAAC;QACD,WAAW,EAAE;UACXC,eAAe,EAAE3C,KAAK,CAAC4C,YAAY;UACnC,SAAS,EAAE;YACTD,eAAe,EAAE3C,KAAK,CAAC8C;UACzB;QACF,CAAC;QACD,UAAU,EAAE;UACVH,eAAe,EAAE3C,KAAK,CAAC+C;QACzB;MACF,CAAC;MACD,cAAc;QACZnC,OAAO,EAAE;MACX,CAAC;MACD;MACA,MAAAU,MAAA,CAAMtB,KAAK,CAACyC,OAAO,wBAAAnB,MAAA,CAAqBtB,KAAK,CAACyC,OAAO,IAAK;QACxDN,iBAAiB,EAAE7B;MACrB;IACF,CAAC,CAAC;IACF,IAAAgB,MAAA,CAAIlB,YAAY,mBAAgB;MAC9BoC,WAAW,EAAE,aAAa;MAC1BrB,UAAU,EAAEnB,KAAK,CAACgD;IACpB;EACF,CAAC;AACH,CAAC;AACD;AACA,OAAO,MAAMC,YAAY,GAAGjD,KAAK,IAAI;EACnC,MAAM;IACJE,SAAS;IACTgD,YAAY;IACZ7C;EACF,CAAC,GAAGL,KAAK;EACT,MAAMe,WAAW,GAAGf,KAAK,CAACmD,UAAU;EACpC,MAAMC,QAAQ,GAAGtD,UAAU,CAACE,KAAK,EAAE;IACjCe,WAAW;IACXE,aAAa,EAAEvB,IAAI,CAACW,IAAI,CAACL,KAAK,CAACqD,YAAY,CAAC,CAACC,GAAG,CAACvC,WAAW,CAAC,CAACP,KAAK,CAAC,CAAC,CAAC;IACtE4B,WAAW,EAAE/B,IAAI,CAAC6C,YAAY,CAAC,CAAC3C,GAAG,CAACF,IAAI,CAACH,SAAS,CAAC,CAACoD,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC9C,KAAK,CAAC,CAAC;IACnE;IACAL,oBAAoB,EAAE,CAAC;IACvB;IACA6C,eAAe,EAAEhD,KAAK,CAACoB;EACzB,CAAC,CAAC;EACF,OAAOgC,QAAQ;AACjB,CAAC;AACD,OAAO,MAAMG,qBAAqB,GAAGvD,KAAK,KAAK;EAC7CoB,SAAS,EAAE,IAAIzB,SAAS,CAACK,KAAK,CAACwD,mBAAmB,CAAC,CAACC,YAAY,CAACzD,KAAK,CAAC0D,gBAAgB,CAAC,CAACC,WAAW,CAAC,CAAC;EACtGzB,YAAY,EAAElC,KAAK,CAAC4D;AACtB,CAAC,CAAC;AACF,eAAe/D,aAAa,CAAC,KAAK,EAAEG,KAAK,IAAI;EAC3C,MAAMoD,QAAQ,GAAGH,YAAY,CAACjD,KAAK,CAAC;EACpC,OAAOD,YAAY,CAACqD,QAAQ,CAAC;AAC/B,CAAC,EAAEG,qBAAqB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}